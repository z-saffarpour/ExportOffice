//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ExportOffice.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FactModel", Namespace="http://schemas.datacontract.org/2004/07/ExportOffice.Web")]
    public partial class FactModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal CostField;
        
        private string MonthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Month {
            get {
                return this.MonthField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthField, value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Columns", Namespace="http://schemas.datacontract.org/2004/07/ExportOffice.Web")]
    public partial class Columns : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColumnTypeField;
        
        private string HeaderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoExportExcel", ReplyAction="http://tempuri.org/IService1/DoExportExcelResponse")]
        System.IAsyncResult BeginDoExportExcel(System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts, System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDoExportExcel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoUploadFile", ReplyAction="http://tempuri.org/IService1/DoUploadFileResponse")]
        System.IAsyncResult BeginDoUploadFile(byte[] buffer, System.AsyncCallback callback, object asyncState);
        
        bool EndDoUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoExportWord", ReplyAction="http://tempuri.org/IService1/DoExportWordResponse")]
        System.IAsyncResult BeginDoExportWord(System.AsyncCallback callback, object asyncState);
        
        byte[] EndDoExportWord(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ExportOffice.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoExportExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoExportExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoUploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoUploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoExportWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoExportWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ExportOffice.ServiceReference1.IService1>, ExportOffice.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoExportExcelDelegate;
        
        private EndOperationDelegate onEndDoExportExcelDelegate;
        
        private System.Threading.SendOrPostCallback onDoExportExcelCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoUploadFileDelegate;
        
        private EndOperationDelegate onEndDoUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onDoUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoExportWordDelegate;
        
        private EndOperationDelegate onEndDoExportWordDelegate;
        
        private System.Threading.SendOrPostCallback onDoExportWordCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<DoExportExcelCompletedEventArgs> DoExportExcelCompleted;
        
        public event System.EventHandler<DoUploadFileCompletedEventArgs> DoUploadFileCompleted;
        
        public event System.EventHandler<DoExportWordCompletedEventArgs> DoExportWordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ExportOffice.ServiceReference1.IService1.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ExportOffice.ServiceReference1.IService1.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ExportOffice.ServiceReference1.IService1)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((ExportOffice.ServiceReference1.IService1)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ExportOffice.ServiceReference1.IService1.BeginDoExportExcel(System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts, System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoExportExcel(facts, headersList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] ExportOffice.ServiceReference1.IService1.EndDoExportExcel(System.IAsyncResult result) {
            return base.Channel.EndDoExportExcel(result);
        }
        
        private System.IAsyncResult OnBeginDoExportExcel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts = ((System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList = ((System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns>)(inValues[1]));
            return ((ExportOffice.ServiceReference1.IService1)(this)).BeginDoExportExcel(facts, headersList, callback, asyncState);
        }
        
        private object[] OnEndDoExportExcel(System.IAsyncResult result) {
            byte[] retVal = ((ExportOffice.ServiceReference1.IService1)(this)).EndDoExportExcel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoExportExcelCompleted(object state) {
            if ((this.DoExportExcelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoExportExcelCompleted(this, new DoExportExcelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoExportExcelAsync(System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts, System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList) {
            this.DoExportExcelAsync(facts, headersList, null);
        }
        
        public void DoExportExcelAsync(System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts, System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList, object userState) {
            if ((this.onBeginDoExportExcelDelegate == null)) {
                this.onBeginDoExportExcelDelegate = new BeginOperationDelegate(this.OnBeginDoExportExcel);
            }
            if ((this.onEndDoExportExcelDelegate == null)) {
                this.onEndDoExportExcelDelegate = new EndOperationDelegate(this.OnEndDoExportExcel);
            }
            if ((this.onDoExportExcelCompletedDelegate == null)) {
                this.onDoExportExcelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoExportExcelCompleted);
            }
            base.InvokeAsync(this.onBeginDoExportExcelDelegate, new object[] {
                        facts,
                        headersList}, this.onEndDoExportExcelDelegate, this.onDoExportExcelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ExportOffice.ServiceReference1.IService1.BeginDoUploadFile(byte[] buffer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoUploadFile(buffer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ExportOffice.ServiceReference1.IService1.EndDoUploadFile(System.IAsyncResult result) {
            return base.Channel.EndDoUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginDoUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] buffer = ((byte[])(inValues[0]));
            return ((ExportOffice.ServiceReference1.IService1)(this)).BeginDoUploadFile(buffer, callback, asyncState);
        }
        
        private object[] OnEndDoUploadFile(System.IAsyncResult result) {
            bool retVal = ((ExportOffice.ServiceReference1.IService1)(this)).EndDoUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoUploadFileCompleted(object state) {
            if ((this.DoUploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoUploadFileCompleted(this, new DoUploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoUploadFileAsync(byte[] buffer) {
            this.DoUploadFileAsync(buffer, null);
        }
        
        public void DoUploadFileAsync(byte[] buffer, object userState) {
            if ((this.onBeginDoUploadFileDelegate == null)) {
                this.onBeginDoUploadFileDelegate = new BeginOperationDelegate(this.OnBeginDoUploadFile);
            }
            if ((this.onEndDoUploadFileDelegate == null)) {
                this.onEndDoUploadFileDelegate = new EndOperationDelegate(this.OnEndDoUploadFile);
            }
            if ((this.onDoUploadFileCompletedDelegate == null)) {
                this.onDoUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginDoUploadFileDelegate, new object[] {
                        buffer}, this.onEndDoUploadFileDelegate, this.onDoUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ExportOffice.ServiceReference1.IService1.BeginDoExportWord(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoExportWord(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] ExportOffice.ServiceReference1.IService1.EndDoExportWord(System.IAsyncResult result) {
            return base.Channel.EndDoExportWord(result);
        }
        
        private System.IAsyncResult OnBeginDoExportWord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ExportOffice.ServiceReference1.IService1)(this)).BeginDoExportWord(callback, asyncState);
        }
        
        private object[] OnEndDoExportWord(System.IAsyncResult result) {
            byte[] retVal = ((ExportOffice.ServiceReference1.IService1)(this)).EndDoExportWord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoExportWordCompleted(object state) {
            if ((this.DoExportWordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoExportWordCompleted(this, new DoExportWordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoExportWordAsync() {
            this.DoExportWordAsync(null);
        }
        
        public void DoExportWordAsync(object userState) {
            if ((this.onBeginDoExportWordDelegate == null)) {
                this.onBeginDoExportWordDelegate = new BeginOperationDelegate(this.OnBeginDoExportWord);
            }
            if ((this.onEndDoExportWordDelegate == null)) {
                this.onEndDoExportWordDelegate = new EndOperationDelegate(this.OnEndDoExportWord);
            }
            if ((this.onDoExportWordCompletedDelegate == null)) {
                this.onDoExportWordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoExportWordCompleted);
            }
            base.InvokeAsync(this.onBeginDoExportWordDelegate, null, this.onEndDoExportWordDelegate, this.onDoExportWordCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ExportOffice.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<ExportOffice.ServiceReference1.IService1>, ExportOffice.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<ExportOffice.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginDoExportExcel(System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.FactModel> facts, System.Collections.ObjectModel.ObservableCollection<ExportOffice.ServiceReference1.Columns> headersList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = facts;
                _args[1] = headersList;
                System.IAsyncResult _result = base.BeginInvoke("DoExportExcel", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndDoExportExcel(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("DoExportExcel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoUploadFile(byte[] buffer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = buffer;
                System.IAsyncResult _result = base.BeginInvoke("DoUploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDoUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DoUploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoExportWord(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoExportWord", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndDoExportWord(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("DoExportWord", _args, result)));
                return _result;
            }
        }
    }
}
